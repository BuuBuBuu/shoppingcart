/**
 * @author MAMINGYANG
 * Generated by script
 */

package com.shoppingcart.springboot.service;

import com.shoppingcart.springboot.model.Address;
import com.shoppingcart.springboot.repository.AddressRepository;
import com.shoppingcart.springboot.service.AddressService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class AddressServiceImpl implements AddressService {

    @Autowired
    private AddressRepository addressRepository;

    @Override
    public Address saveAddress(Address address) {
        return addressRepository.save(address);
    }

    @Override
    public Address getAddressById(Long id) {
        Address address = addressRepository.findById(id).orElse(null);
        // 仅返回可见的地址
        if (address != null && address.getIsVisible()) {
            return address;
        }
        return null; // 或者抛出异常，表示地址不存在
    }
    @Override
    public List<Address> getAddressesByCustomerId(Long customerId) {
        // 修改为只获取 isVisible 为 true 的地址
        return addressRepository.findByCustomer_CustomerIdAndIsVisibleTrue(customerId);
    }

    @Override
    public Address updateAddress(Long id, Address address) {
        Address existingAddress = addressRepository.findById(id).orElse(null);
        if (existingAddress != null) {
            existingAddress.setStreetAddress(address.getStreetAddress());
            existingAddress.setCity(address.getCity());
            existingAddress.setState(address.getState());
            existingAddress.setPostalCode(address.getPostalCode());
            // 如果需要更新关联的客户
            existingAddress.setCustomer(address.getCustomer());
            return addressRepository.save(existingAddress);
        }
        return null;
    }

    @Override
    public void deleteAddress(Long id) {
        Address address = addressRepository.findById(id).orElse(null);
        if (address != null && address.getIsVisible()) {
            address.setVisible(false);
            addressRepository.save(address);
        }
    }
}