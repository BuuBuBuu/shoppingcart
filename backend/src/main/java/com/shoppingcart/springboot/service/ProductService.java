/**
 * @author TANGYINGRUI
 * Generated by script
 */

package com.shoppingcart.springboot.service;

import com.shoppingcart.springboot.model.Product;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import java.util.List;

public interface ProductService {


    // Fetch all visible products (unpaged)
    List<Product> getAllProducts();

    // Save a new product
    Product saveProduct(Product product);

    // Find a product by ID

    // Update an existing product
    Product updateProduct(Long id, Product product);

    // Delete a product by ID
    void deleteProductById(Long id);

    // Pagination methods with sorting (includes order now)
    Page<Product> getAllProductsPaginated(int page, int size, String sortBy, String order);

    // Fetch only visible products with pagination and sorting
    Page<Product> getVisibleProductsPaginated(int page, int size, String sortBy, String order);

    // Search with pagination and sorting (includes sorting direction)
    Page<Product> searchProductsPaginated(Long id, String name, String category, int page, int size, String sortBy, String order);

    // Fetch products by page (basic pagination without sorting)
    List<Product> getProductsByPage(int page, int size);

    // Fetch a visible product by ID
    Product getProductById(Long productId);

    // Fetch products by category (visible products only)
    List<Product> getProductsByCategory(String category);

    // Fetch products by name (visible products only)
    List<Product> getProductsByName(String name);

    // New methods for sorting and searching
    List<Product> getAllProductsSorted(String sortBy, String order);

    List<Product> searchProductsByIdOrName(Long productId, String name, String sortBy, String order);

    // New method for multi-parameter search and pagination
    Page<Product> searchAndFilterProducts(Long productId, String name, String category, String sortBy, String order, Pageable pageable);

    List<Product> findProductByCategory(String category);

    List<Product> findProductByName(String name);

    Page<Product> getProductsByPage(Pageable pageable);

    // Search products based on the searchContent key word and visibility
    Page<Product> searchProducts(String searchContent, int page, int size, String sortOrder);

//     Get product By productId, imvisible products hidden
    Product findProductById(Long productId);

    // List products By category, imvisible products hidden
    List<Product> findProductsByCategory(String category);

    void incrementProductViewCount(Long productId);



    // Pagination methods with sorting
//    Page<Product> getAllProductsPaginated(int page, int size, String sortBy);
//
//    Page<Product> searchProductsPaginated(Long id, String name, String category, int page, int size, String sortBy);


}
